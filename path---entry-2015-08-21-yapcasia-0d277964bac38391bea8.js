webpackJsonp([21247656763398],{270:function(n,a){n.exports={data:{site:{siteMetadata:{title:":-)",author:"github.com/9renpoto"}},markdownRemark:{id:"/home/travis/build/9renpoto/entry/src/pages/2015-08-21-yapcasia/index.md absPath of file >>> MarkdownRemark",html:'<h1>yapc asia memo</h1>\n<p>yapcasiaに参加したときのメモを残します。</p>\n<h2>Effective ES6</h2>\n<h3>denger</h3>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Persion</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name\n<span class="token punctuation">}</span>\n\n<span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token string">&apos;bob&apos;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n# p<span class="token punctuation">.</span>name <span class="token operator">==</span> undefined\n# window<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&apos;bob&apos;</span>\n</code></pre>\n      </div>\n<ul>\n<li>\n<p>class</p>\n<ul>\n<li>constractor</li>\n<li>newナシで呼ぶとError</li>\n</ul>\n</li>\n<li>\n<p>IE11 ES6は実装しない</p>\n</li>\n<li>\n<p>transpiler</p>\n<ul>\n<li>ES6 to ES5</li>\n</ul>\n</li>\n<li>\n<p>polyfill</p>\n<ul>\n<li>buildinのclassをjs環境で動かすようにする</li>\n</ul>\n</li>\n<li>\n<p>Babel</p>\n<ul>\n<li>core.js # polyfill toolsもあるよ</li>\n</ul>\n</li>\n<li>\n<p>ES6 feature</p>\n<ul>\n<li>\n<p>new syntax</p>\n</li>\n<li>\n<p>arrow function</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code><span class="token keyword">var</span> add <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n<span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n</li>\n<li>\n<p>class</p>\n</li>\n</ul>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Programmer</span> <span class="token keyword">extends</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>\n    <span class="token function">constracor</span><span class="token punctuation">(</span>name <span class="token punctuation">,</span>language<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>language <span class="token operator">=</span> language<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<ul>\n<li>module</li>\n</ul>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token string">&apos;foo&apos;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token keyword">from</span> <span class="token string">&apos;./module/path&apos;</span>\n</code></pre>\n      </div>\n<ul>\n<li>\n<p>‘use strict’</p>\n<ul>\n<li>書かなくていい</li>\n</ul>\n</li>\n<li>block scope</li>\n</ul>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token string">&apos;outer&apos;</span>\n<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    a <span class="token operator">=</span> <span class="token string">&apos;inner&apos;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> # undefined\n</code></pre>\n      </div>\n<ul>\n<li>arguments</li>\n</ul>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token operator">...</span>rest<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">draw</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token punctuation">{</span>height<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>width<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<ul>\n<li>template literal\n` で文字列を囲むと改行付き文字列が定義できる</li>\n<li>\n<p>Promise</p>\n<ul>\n<li>callback地獄回避</li>\n</ul>\n</li>\n<li>map/set</li>\n<li>\n<p>codePoint</p>\n<ul>\n<li>吉野家isvalid</li>\n</ul>\n</li>\n<li>trap</li>\n</ul>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> # <span class="token keyword">if</span> <span class="token punctuation">(</span> a <span class="token operator">&gt;=</span> <span class="token number">1</span> <span class="token punctuation">)</span> &#x304C;&#x6B63;\n</code></pre>\n      </div>\n<ul>\n<li>balelっていこう</li>\n</ul>\n</li>\n</ul>\n<h2>今フロントエンドで何が起こっているのか</h2>\n<ul>\n<li>htmlだけ返せばよかったような時代</li>\n<li>\n<p>ajaxの登場</p>\n<ul>\n<li>google map etc</li>\n<li>ECMAscript5</li>\n</ul>\n</li>\n<li>coffeescript</li>\n<li>jQuery(from 2006)</li>\n<li>backbonejs</li>\n<li>nodejs(2009)</li>\n<li>\n<p>grunt(2012)</p>\n<ul>\n<li>config</li>\n<li>plugin base</li>\n</ul>\n</li>\n<li>typescript(2012)</li>\n<li>\n<p>AST</p>\n<ul>\n<li>abstract syntax template</li>\n</ul>\n</li>\n<li>\n<p>SPA</p>\n<ul>\n<li>問題</li>\n<li>SEO</li>\n<li>Performance</li>\n</ul>\n</li>\n<li>\n<p>AngularJS(2009)</p>\n<ul>\n<li>2way data binding</li>\n<li>fullstack</li>\n</ul>\n</li>\n<li>\n<p>gulp</p>\n<ul>\n<li>stream base</li>\n</ul>\n</li>\n<li>Browserify</li>\n<li>\n<p>ECMAscript 2015</p>\n<ul>\n<li>Stateless</li>\n<li>Composable</li>\n<li>stream</li>\n</ul>\n</li>\n<li>babel (2014)</li>\n<li>\n<p>Service Workers</p>\n<ul>\n<li>Intercept Requeest</li>\n<li>offline / cahce</li>\n<li>Background Sync</li>\n<li>Push Notification</li>\n</ul>\n</li>\n<li>Extensible Web</li>\n<li>\n<p>Reactjs</p>\n<ul>\n<li>Stateless Component</li>\n</ul>\n</li>\n<li>Flux</li>\n<li>\n<p>FRP</p>\n<ul>\n<li>Rx.js, Bacon.js</li>\n</ul>\n</li>\n<li>\n<p>Redux</p>\n<ul>\n<li>Inspired by Flux and Elm</li>\n</ul>\n</li>\n</ul>\n<h2>どうしてこうなったNode.jsとio.jsの分裂と統合の行方。これからどう進化していくのか</h2>\n<h3>Node.jsの歴史 (Node.jsとは、Node.jsが生まれた背景）</h3>\n<ul>\n<li>\n<p>2001</p>\n<ul>\n<li>C10K Problem</li>\n</ul>\n</li>\n<li>\n<p>2007</p>\n<ul>\n<li>Web 2.0</li>\n</ul>\n</li>\n<li>\n<p>2009 ~ 2012</p>\n<ul>\n<li>JSConf EU</li>\n<li>Server-side JavaScript</li>\n<li>Evented Non Blocking I/O</li>\n<li>v8</li>\n<li>EventLoop Model</li>\n<li>libebb => libev/libeio &#x26; libuv (Windows向け）</li>\n<li>netv8 => node</li>\n<li>Joyent</li>\n<li>破壊と創造</li>\n<li>APIがかなり深刻に変わる</li>\n<li>BDFL (優しい終身の独裁者モデル）</li>\n</ul>\n</li>\n<li>\n<p>2012 ~ 2014</p>\n<ul>\n<li>Socket.IO</li>\n</ul>\n</li>\n</ul>\n<h3>Node/io.jsの機能的な違いと性能的な違い</h3>\n<ul>\n<li>\n<p>2014 ~</p>\n<ul>\n<li>node forward</li>\n<li>BDFL => community model</li>\n<li>Technical committee</li>\n<li>コアメンバー委員会</li>\n<li>Collaborator</li>\n<li>Working group</li>\n<li>Semantic Versioning</li>\n<li>major.minor.patch</li>\n<li>オープンガバナーンスモデル</li>\n<li>Feature Node.js</li>\n<li>io.jsのこと</li>\n<li>node Foundation</li>\n<li>log term suport</li>\n</ul>\n</li>\n</ul>\n<h3>Node/io.jsのロードマップ</h3>\n<ul>\n<li>ES6 compat ％ up</li>\n<li>StrongScript</li>\n<li>SimpleSteam</li>\n<li>improve pref</li>\n</ul>',frontmatter:{title:"yapcasia",date:"August 21, 2015"}}},pathContext:{path:"/entry/2015/08/21/yapcasia/"}}}});
//# sourceMappingURL=path---entry-2015-08-21-yapcasia-0d277964bac38391bea8.js.map