<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on :-)</title>
    <link>https://9renpoto.github.io/blog/</link>
    <description>Recent content in Blogs on :-)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Sat, 03 Sep 2016 10:02:40 +0900</lastBuildDate>
    <atom:link href="https://9renpoto.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>\#html5j 参加メモ</title>
      <link>https://9renpoto.github.io/blog/2016/09/03/html5j-201609/</link>
      <pubDate>Sat, 03 Sep 2016 10:02:40 +0900</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2016/09/03/html5j-201609/</guid>
      <description>

&lt;h1 id=&#34;html5j&#34;&gt;html5j&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;http://events.html5j.org/conference/2016/9/assets/img/header/logo.svg&#34; alt=&#34;logo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://events.html5j.org/conference/2016/9/&#34;&gt;http://events.html5j.org/conference/2016/9/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;基調講演&#34;&gt;基調講演&lt;/h2&gt;

&lt;p&gt;speaker: 中村 修&lt;/p&gt;

&lt;p&gt;大規模分散オペレーティングシステム&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;HDR&lt;/li&gt;
&lt;li&gt;Web は Web 以外に存在するデータ表現を全てできるべき&lt;/li&gt;
&lt;li&gt;全てinternetの上にある発想

&lt;ol&gt;
&lt;li&gt;Big Data&lt;/li&gt;
&lt;li&gt;AI&lt;/li&gt;
&lt;li&gt;IoT&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Distributed Operating System&lt;/li&gt;
&lt;li&gt;縦書きcss

&lt;ul&gt;
&lt;li&gt;日本頑張ってる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;speaker: 及川 卓也&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;IE7 担当してました&lt;/li&gt;
&lt;li&gt;アプリケーションとしてのWeb

&lt;ul&gt;
&lt;li&gt;API&lt;/li&gt;
&lt;li&gt;Web Components&lt;/li&gt;
&lt;li&gt;PWApps&lt;/li&gt;
&lt;li&gt;Service Worker&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;モバイルデバイスの普及

&lt;ul&gt;
&lt;li&gt;ニュースキュレーションアプリ&lt;/li&gt;
&lt;li&gt;AMP&lt;/li&gt;
&lt;li&gt;CMS やツールに依存している場合&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;今こそWebに再投資しよう&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;reactの最新動向とベストプラクティス&#34;&gt;Reactの最新動向とベストプラクティス&lt;/h2&gt;

&lt;p&gt;speaker: @koba04&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Stateless Function Components(SFC)&lt;/li&gt;
&lt;li&gt;state はviewに関係あるものだけで十分&lt;/li&gt;
&lt;li&gt;React.PureComponent(v15.3.0~)

&lt;ul&gt;
&lt;li&gt;ShoudComponentUpdate に類似(後で調べる)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;react-addons-perf&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;計測ツール&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;React.createClass

&lt;ul&gt;
&lt;li&gt;徐々に非推奨&lt;/li&gt;
&lt;li&gt;React.Component へ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;High Order Function

&lt;ul&gt;
&lt;li&gt;関数型っぽい&lt;/li&gt;
&lt;li&gt;&lt;code&gt;acdlite/recomponse&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;stateの管理

&lt;ul&gt;
&lt;li&gt;なるべく一箇所で管理&lt;/li&gt;
&lt;li&gt;Redux&lt;/li&gt;
&lt;li&gt;Container Component

&lt;ul&gt;
&lt;li&gt;更新処理・状態管理&lt;/li&gt;
&lt;li&gt;DOMを持たない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Presentational Component

&lt;ul&gt;
&lt;li&gt;Viewの構築を担う&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Component をテストする

&lt;ul&gt;
&lt;li&gt;TestUtil.renderInfoDocument&lt;/li&gt;
&lt;li&gt;shallowRender&lt;/li&gt;
&lt;li&gt;&lt;code&gt;react-test-renderer&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;開発をサポートするツール

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zalmoxisus/redux-devtools-extension&#34;&gt;https://github.com/zalmoxisus/redux-devtools-extension&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kadirahq/react-storybook&#34;&gt;https://github.com/kadirahq/react-storybook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;service-worker-deep-dive&#34;&gt;Service Worker Deep Dive&lt;/h2&gt;

&lt;p&gt;speaker: @horo&lt;/p&gt;

&lt;p&gt;slide: &lt;a href=&#34;http://goo.gl/YxL2L7&#34;&gt;http://goo.gl/YxL2L7&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://jakearchibald.github.io/isserviceworkerready/&#34;&gt;https://jakearchibald.github.io/isserviceworkerready/&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;stream

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/19x3yi7Jn-6In5igGYfEiK0tBfNI290BAclT0AiqDj4Q/pub?slide=id.g1641acac50_0_0&#34;&gt;https://docs.google.com/presentation/d/19x3yi7Jn-6In5igGYfEiK0tBfNI290BAclT0AiqDj4Q/pub?slide=id.g1641acac50_0_0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;徐々に読み込んで処理できる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ReadableStream&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Unified Media Pipeline (android)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Usage

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rel=serviceworker&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;the-first-step-to-angular-2&#34;&gt;The First Step to Angular 2&lt;/h2&gt;

&lt;p&gt;speaker: @laco0416&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Official Packages

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;@angular/core&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@angular/forms&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@angular/http&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@angular/router&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;TypeScript

&lt;ul&gt;
&lt;li&gt;常に正しいAPI&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;API

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;@component&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@input&lt;/code&gt; / &lt;code&gt;@output&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@directive&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@pipe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@NgModule&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;webパフォーマンス最前線&#34;&gt;Webパフォーマンス最前線&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;High Performance Web User Interface

&lt;ul&gt;
&lt;li&gt;パフォーマンスに対する優先度&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RAIL&lt;/code&gt; &lt;a href=&#34;http://furoshiki.hatenadiary.jp/entry/2015/06/01/122537&#34;&gt;http://furoshiki.hatenadiary.jp/entry/2015/06/01/122537&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Response&lt;/li&gt;
&lt;li&gt;Animation&lt;/li&gt;
&lt;li&gt;Idle&lt;/li&gt;
&lt;li&gt;Loa&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transform: translateZ(0)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;凶悪&lt;/li&gt;
&lt;li&gt;Web標準: &lt;code&gt;will-change: transform&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;Reduce GPU Memory&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Scroll Performance

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;img lazyload&amp;gt;&lt;/code&gt; :innocent:&lt;/li&gt;
&lt;li&gt;&lt;code&gt;intersectionObserver&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;throttle &lt;a href=&#34;http://blog.tsumikiinc.com/article/20141125_javascript-event-throttle.html&#34;&gt;http://blog.tsumikiinc.com/article/20141125_javascript-event-throttle.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;TODO 調べる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Task Optimization

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://inside.pixiv.net/entry/2015/12/24/182248&#34;&gt;http://inside.pixiv.net/entry/2015/12/24/182248&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;progressive-web-apps-の導入基礎&#34;&gt;Progressive Web Apps の導入基礎&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Push Notification

&lt;ul&gt;
&lt;li&gt;service worker&lt;/li&gt;
&lt;li&gt;ユーザーの許諾を得て、メリットを提示してからやったほうが良い&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/kuu/the-offline-cookbook-ja/blob/master/ja.md&#34;&gt;https://github.com/kuu/the-offline-cookbook-ja/blob/master/ja.md&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>TypeScript のテスト環境を考える</title>
      <link>https://9renpoto.github.io/blog/2016/08/31/karma-webpack/</link>
      <pubDate>Wed, 31 Aug 2016 21:26:35 +0900</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2016/08/31/karma-webpack/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/9renpoto/ts/builds/156475663&#34;&gt;https://travis-ci.org/9renpoto/ts/builds/156475663&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;上手く動かない&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;アバウトな構成&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;&amp;quot;devDependencies&amp;quot;: {
  &amp;quot;@9renpoto/eslint-config&amp;quot;: &amp;quot;^1.1.0&amp;quot;,
  &amp;quot;@9renpoto/tslint-config&amp;quot;: &amp;quot;^1.0.0&amp;quot;,
  &amp;quot;@types/mocha&amp;quot;: &amp;quot;^2.2.31&amp;quot;,
  &amp;quot;@types/power-assert&amp;quot;: &amp;quot;0.0.27&amp;quot;,
  &amp;quot;awesome-typescript-loader&amp;quot;: &amp;quot;^2.2.1&amp;quot;,
  &amp;quot;codecov&amp;quot;: &amp;quot;^1.0.1&amp;quot;,
  &amp;quot;eslint&amp;quot;: &amp;quot;^3.4.0&amp;quot;,
  &amp;quot;json-loader&amp;quot;: &amp;quot;^0.5.4&amp;quot;,
  &amp;quot;karma&amp;quot;: &amp;quot;^1.2.0&amp;quot;,
  &amp;quot;karma-coverage&amp;quot;: &amp;quot;^1.1.1&amp;quot;,
  &amp;quot;karma-firefox-launcher&amp;quot;: &amp;quot;^1.0.0&amp;quot;,
  &amp;quot;karma-mocha&amp;quot;: &amp;quot;^1.1.1&amp;quot;,
  &amp;quot;karma-sourcemap-loader&amp;quot;: &amp;quot;^0.3.7&amp;quot;,
  &amp;quot;karma-webpack&amp;quot;: &amp;quot;^1.8.0&amp;quot;,
  &amp;quot;mocha&amp;quot;: &amp;quot;^3.0.2&amp;quot;,
  &amp;quot;npm-run-all&amp;quot;: &amp;quot;^3.0.0&amp;quot;,
  &amp;quot;power-assert&amp;quot;: &amp;quot;^1.4.1&amp;quot;,
  &amp;quot;rimraf&amp;quot;: &amp;quot;^2.5.4&amp;quot;,
  &amp;quot;tslint&amp;quot;: &amp;quot;^3.15.1&amp;quot;,
  &amp;quot;typescript&amp;quot;: &amp;quot;^2.0.2&amp;quot;,
  &amp;quot;webpack&amp;quot;: &amp;quot;^1.13.2&amp;quot;,
  &amp;quot;webpack-espower-loader&amp;quot;: &amp;quot;^1.0.1&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;tsc&lt;/code&gt; しても &lt;code&gt;webpack&lt;/code&gt; しても問題ないように見えるが、 &lt;code&gt;karma&lt;/code&gt; を通した場合 &lt;code&gt;SyntaxError&lt;/code&gt; など出てきて非常に厳しい&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/9renpoto/karma-power-assert-typescript-mocha-webpack-sample&#34;&gt;https://github.com/9renpoto/karma-power-assert-typescript-mocha-webpack-sample&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;同様の構成で先に検証頂いているものを発見するも、現在構成との違いの無さに
こちらが動かない理由は不明、頭を悩ませる&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>TypeScript で coverage を計測する</title>
      <link>https://9renpoto.github.io/blog/2016/08/20/coverage/</link>
      <pubDate>Sat, 20 Aug 2016 14:28:25 +0900</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2016/08/20/coverage/</guid>
      <description>

&lt;h1 id=&#34;typescript-で-coverage-report-を計測する&#34;&gt;TypeScript で Coverage report を計測する&lt;/h1&gt;

&lt;h2 id=&#34;tl-dr&#34;&gt;TL;DR&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/remap-istanbul&#34;&gt;remap-istanbul&lt;/a&gt; を使う&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;npm install remap-istanbul&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sourcemap: true&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;memo&#34;&gt;Memo&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tsc&lt;/code&gt; &amp;gt; &lt;code&gt;npm test&lt;/code&gt; という流れになったため JavaScript としてテストをする形になる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/espower-typescript&#34;&gt;espower-typescript&lt;/a&gt; を使わないようになる

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;espower-typescript&lt;/code&gt; は tsc の wrapper なのでtscする場合は使えなそう&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;power-assert&lt;/code&gt; が上手く構造を解釈してくれてなさそう

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;espower-typescript&lt;/code&gt; が担っていた役割を別で与える必要がある?&lt;/li&gt;
&lt;li&gt;TypeScript に依存するなら無駄にbabel pluginなどは使いたくない&lt;/li&gt;
&lt;li&gt;TODO 考える&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;refs&#34;&gt;Refs&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.syati.info/post/typescript_coverage/&#34;&gt;http://blog.syati.info/post/typescript_coverage/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/9renpoto/ts/pull/34&#34;&gt;https://github.com/9renpoto/ts/pull/34&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>TypeScript with power-assert</title>
      <link>https://9renpoto.github.io/blog/2016/08/11/module-test-2/</link>
      <pubDate>Thu, 11 Aug 2016 21:43:32 +0900</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2016/08/11/module-test-2/</guid>
      <description>

&lt;h1 id=&#34;typescript-で-power-assert-を使いたい&#34;&gt;TypeScript で power-assert を使いたい&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://9renpoto.github.io/blog/2016/06/23/typescript-module-test/&#34;&gt;TypeScriptテストについて&lt;/a&gt; 少し調べました&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/9renpoto/ts/pull/31&#34;&gt;https://github.com/9renpoto/ts/pull/31&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;原因&#34;&gt;原因&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;TypeScript がファイルパスを相対パスか絶対パスのどちらかで返す場合がある

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/TypeScript/blob/204f2c16c0d6ff851e4798c03a9646b625ac2bd7/src/compiler/core.ts#L821-L825&#34;&gt;https://github.com/Microsoft/TypeScript/blob/204f2c16c0d6ff851e4798c03a9646b625ac2bd7/src/compiler/core.ts#L821-L825&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;対策&#34;&gt;対策&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/teppeis/typescript-simple/pull/47&#34;&gt;https://github.com/teppeis/typescript-simple/pull/47&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;悩み&#34;&gt;悩み&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rootDir&lt;/code&gt;, &lt;code&gt;outDir&lt;/code&gt; の組み合わせで挙動が変わることを理解する必要がある&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rootDirs&lt;/code&gt; が入る(TypeScript 2.0~)&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>riot.js 勉強会</title>
      <link>https://9renpoto.github.io/blog/2016/07/27/riotjs-jp-study-1/</link>
      <pubDate>Wed, 27 Jul 2016 19:31:28 +0900</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2016/07/27/riotjs-jp-study-1/</guid>
      <description>

&lt;h1 id=&#34;riot-js-勉強会-1&#34;&gt;Riot.js 勉強会 #1&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://riotjs-jp.connpass.com/event/35724/&#34;&gt;http://riotjs-jp.connpass.com/event/35724/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参加メモ&#34;&gt;参加メモ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;小さいライブラリーを維持するための努力は大変&lt;/li&gt;
&lt;li&gt;セマンティックバージョニングは大事&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;悩み&#34;&gt;悩み&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;web component 時代のcss , html との付き合い方

&lt;ul&gt;
&lt;li&gt;styleguide はどこまで責任を持つべきか&lt;/li&gt;
&lt;li&gt;web component ライブラリーを含めて書くべきか&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://morishitter.hatenablog.com/entry/2016/07/29/204642&#34;&gt;http://morishitter.hatenablog.com/entry/2016/07/29/204642&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;まだ CSS Modules を使うべきか個人レベルではわからない&lt;/li&gt;
&lt;li&gt;この記事を理解するための勉強あ必要&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;next&#34;&gt;Next&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;styleguide を書く

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/9renpoto/style&#34;&gt;https://github.com/9renpoto/style&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;riot を使った簡単なものを作る

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/9renpoto/profile&#34;&gt;https://github.com/9renpoto/profile&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;気持ち&#34;&gt;気持ち&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;できるだけ型のある世界で生きていく&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>typescript test</title>
      <link>https://9renpoto.github.io/blog/2016/06/23/module-test/</link>
      <pubDate>Thu, 23 Jun 2016 11:25:56 +0900</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2016/06/23/module-test/</guid>
      <description>&lt;p&gt;TypeScript の勉強を頑張ろう&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/9renpoto/javascript/pull/19&#34;&gt;9renpoto/javascript/pull/19&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/9renpoto/javascript/tree/fbb4448064f42461936bb02b792e9a6ec4f8c189&#34;&gt;commit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;devDependencies&amp;quot;: {
    &amp;quot;eslint&amp;quot;: &amp;quot;^2.13.1&amp;quot;,
    &amp;quot;espower-typescript&amp;quot;: &amp;quot;^5.0.1&amp;quot;,
    &amp;quot;mocha&amp;quot;: &amp;quot;^2.5.3&amp;quot;,
    &amp;quot;power-assert&amp;quot;: &amp;quot;^1.4.1&amp;quot;,
    &amp;quot;tslint&amp;quot;: &amp;quot;^3.11.0&amp;quot;,
    &amp;quot;typescript-eslint-parser&amp;quot;: &amp;quot;0.1.0-alpha-1&amp;quot;,
    &amp;quot;typings&amp;quot;: &amp;quot;^1.3.0&amp;quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下記を満たす簡単なサンプルを書く&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;複数 module&lt;/li&gt;
&lt;li&gt;mocha によるテスト&lt;/li&gt;
&lt;li&gt;power-assertによるテスト&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;espower-typescript&lt;/code&gt; が通らないので中身を見て調べる&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Update Blog</title>
      <link>https://9renpoto.github.io/blog/2016/01/13/gh-pages/</link>
      <pubDate>Wed, 13 Jan 2016 22:29:22 +0900</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2016/01/13/gh-pages/</guid>
      <description>

&lt;h1 id=&#34;tl-dr&#34;&gt;TL;DR&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Hugoを利用して &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt; に公開&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mozilla/oghliner&#34;&gt;mozilla/oghliner&lt;/a&gt;を利用してオフライン対応&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;hugoを利用してgh-pagesにデプロイ&#34;&gt;Hugoを利用してgh-pagesにデプロイ&lt;/h2&gt;

&lt;p&gt;公式ドキュメントでwercker-ciを利用したデプロイ方法が&lt;a href=&#34;https://gohugo.io/tutorials/automated-deployments/&#34;&gt;紹介&lt;/a&gt;されており、そちらを利用していましたが&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;http://9renpoto.github.io/&amp;lt;project_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;という名前になってしまい、個人ページとして構築を目的とした場合不満があったため環境を見直し。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://pages.github.com/&#34;&gt;pages.github.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/eichann/items/4fe61b8b9bbafcfbe847#%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%922%E3%81%A4%E4%BD%9C%E6%88%90&#34;&gt;qiita.com/eichann/items/4fe61b8b9bbafcfbe847&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;を参考に問題を解決するために手を動かし始めました。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;lt;username&amp;gt;.github.io
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;リポジトリーを作成し &lt;code&gt;master&lt;/code&gt; ブランチにpushされることによって公開される（not gh-pages branch)ようなので&lt;/p&gt;

&lt;p&gt;&lt;code&gt;public/&lt;/code&gt; に生成されたものを &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt; にdestするように修正しました。&lt;/p&gt;

&lt;h2 id=&#34;オフライン対応&#34;&gt;オフライン対応&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/mozilla/oghliner&#34;&gt;mozilla/oghliner&lt;/a&gt;がserviceWorkerを利用したオフライン化を簡単に提供していたので試しに使ってみる。&lt;/p&gt;

&lt;h2 id=&#34;feature&#34;&gt;Feature&lt;/h2&gt;

&lt;p&gt;ビルド・デプロイタスクを直す&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>yapcasia</title>
      <link>https://9renpoto.github.io/blog/2015/08/21/yapcasia/</link>
      <pubDate>Fri, 21 Aug 2015 09:53:55 +0900</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2015/08/21/yapcasia/</guid>
      <description>

&lt;h1 id=&#34;yapc-asia-memo&#34;&gt;yapc asia memo&lt;/h1&gt;

&lt;p&gt;yapcasiaに参加したときのメモを残します&lt;/p&gt;

&lt;h2 id=&#34;effective-es6&#34;&gt;Effective ES6&lt;/h2&gt;

&lt;h3 id=&#34;denger&#34;&gt;denger&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function Persion(name) {
  this.name = name
}

var p = Person(&#39;bob&#39;);
# p.name == undefined
# window.name = &#39;bob&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;class

&lt;ul&gt;
&lt;li&gt;constractor&lt;/li&gt;
&lt;li&gt;newナシで呼ぶとError&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;IE11 ES6は実装しない&lt;/li&gt;
&lt;li&gt;transpiler

&lt;ul&gt;
&lt;li&gt;ES6 to ES5&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;polyfill

&lt;ul&gt;
&lt;li&gt;buildinのclassをjs環境で動かすようにする&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Babel&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;core.js # polyfill toolsもあるよ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ES6 feature&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;new syntax&lt;/li&gt;

&lt;li&gt;&lt;p&gt;arrow function&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var add =&amp;gt; (a,b) =&amp;gt; {
return a + b;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;class&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class Programmer extends Person {
    constracor(name ,language) {
        super(name);
        this.language = language;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;module&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;export var foo = &#39;foo&#39;;
import (foo) from &#39;./module/path&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&amp;lsquo;use strict&amp;rsquo;

&lt;ul&gt;
&lt;li&gt;書かなくていい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;block scope&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var a = &#39;outer&#39;
function bar() {
    console.log(a);
    a = &#39;inner&#39;;
}
bar(); # undefined
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;arguments&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function foo(...rest) {
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function draw(x,y,{height:1,width:1} = {}) {
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;template literal
` で文字列を囲むと改行付き文字列が定義できる&lt;/li&gt;
&lt;li&gt;Promise

&lt;ul&gt;
&lt;li&gt;callback地獄回避&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;map/set&lt;/li&gt;
&lt;li&gt;codePoint

&lt;ul&gt;
&lt;li&gt;吉野家isvalid&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;trap&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;  if (a =&amp;gt; 1) # if ( a &amp;gt;= 1 ) が正
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;balel　っていこう&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;今フロントエンドで何が起こっているのか&#34;&gt;今フロントエンドで何が起こっているのか&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;htmlだけ返せばよかったような時代&lt;/li&gt;
&lt;li&gt;ajaxの登場

&lt;ul&gt;
&lt;li&gt;google map etc&lt;/li&gt;
&lt;li&gt;ECMAscript5&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;coffeescript&lt;/li&gt;
&lt;li&gt;jQuery(from 2006)&lt;/li&gt;
&lt;li&gt;backbonejs&lt;/li&gt;
&lt;li&gt;nodejs(2009)&lt;/li&gt;
&lt;li&gt;grunt(2012)

&lt;ul&gt;
&lt;li&gt;config&lt;/li&gt;
&lt;li&gt;plugin base&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;typescript(2012)&lt;/li&gt;
&lt;li&gt;AST

&lt;ul&gt;
&lt;li&gt;abstract syntax template&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;SPA

&lt;ul&gt;
&lt;li&gt;問題&lt;/li&gt;
&lt;li&gt;SEO&lt;/li&gt;
&lt;li&gt;Performance&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;AngularJS(2009)

&lt;ul&gt;
&lt;li&gt;2way data binding&lt;/li&gt;
&lt;li&gt;fullstack&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;gulp

&lt;ul&gt;
&lt;li&gt;stream base&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Browserify&lt;/li&gt;
&lt;li&gt;ECMAscript 2015

&lt;ul&gt;
&lt;li&gt;Stateless&lt;/li&gt;
&lt;li&gt;Composable&lt;/li&gt;
&lt;li&gt;stream&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;babel (2014)&lt;/li&gt;
&lt;li&gt;Service Workers

&lt;ul&gt;
&lt;li&gt;Intercept Requeest&lt;/li&gt;
&lt;li&gt;offline / cahce&lt;/li&gt;
&lt;li&gt;Background Sync&lt;/li&gt;
&lt;li&gt;Push Notification&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Extensible Web&lt;/li&gt;
&lt;li&gt;Reactjs

&lt;ul&gt;
&lt;li&gt;Stateless Component&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Flux&lt;/li&gt;
&lt;li&gt;FRP

&lt;ul&gt;
&lt;li&gt;Rx.js, Bacon.js&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Redux

&lt;ul&gt;
&lt;li&gt;Inspired by Flux and Elm&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;どうしてこうなった-node-jsとio-jsの分裂と統合の行方-これからどう進化していくのか&#34;&gt;どうしてこうなった？　Node.jsとio.jsの分裂と統合の行方。これからどう進化していくのか？&lt;/h2&gt;

&lt;h3 id=&#34;node-jsの歴史-node-jsとは-node-jsが生まれた背景&#34;&gt;Node.jsの歴史 (Node.jsとは、Node.jsが生まれた背景）&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;2001

&lt;ul&gt;
&lt;li&gt;C10K Problem&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;2007

&lt;ul&gt;
&lt;li&gt;Web 2.0&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;2009 ~ 2012

&lt;ul&gt;
&lt;li&gt;JSConf EU&lt;/li&gt;
&lt;li&gt;Server-side JavaScript&lt;/li&gt;
&lt;li&gt;Evented Non Blocking I/O&lt;/li&gt;
&lt;li&gt;v8&lt;/li&gt;
&lt;li&gt;EventLoop Model&lt;/li&gt;
&lt;li&gt;libebb =&amp;gt; libev/libeio &amp;amp; libuv (Windows向け）&lt;/li&gt;
&lt;li&gt;netv8 =&amp;gt; node&lt;/li&gt;
&lt;li&gt;Joyent&lt;/li&gt;
&lt;li&gt;破壊と創造&lt;/li&gt;
&lt;li&gt;APIがかなり深刻に変わる&lt;/li&gt;
&lt;li&gt;BDFL (優しい終身の独裁者モデル）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;2012 ~ 2014

&lt;ul&gt;
&lt;li&gt;Socket.IO&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;node-io-jsの機能的な違いと性能的な違い&#34;&gt;Node/io.jsの機能的な違いと性能的な違い&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;2014 ~

&lt;ul&gt;
&lt;li&gt;node forward&lt;/li&gt;
&lt;li&gt;BDFL =&amp;gt; community model&lt;/li&gt;
&lt;li&gt;Technical committee&lt;/li&gt;
&lt;li&gt;コアメンバー委員会&lt;/li&gt;
&lt;li&gt;Collaborator&lt;/li&gt;
&lt;li&gt;Working group&lt;/li&gt;
&lt;li&gt;Semantic Versioning&lt;/li&gt;
&lt;li&gt;major.minor.patch&lt;/li&gt;
&lt;li&gt;オープンガバナーンスモデル&lt;/li&gt;
&lt;li&gt;Feature Node.js&lt;/li&gt;
&lt;li&gt;io.jsのこと&lt;/li&gt;
&lt;li&gt;node Foundation&lt;/li&gt;
&lt;li&gt;log term suport&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;node-io-jsのロードマップ&#34;&gt;Node/io.jsのロードマップ&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;ES6 compat ％ up&lt;/li&gt;
&lt;li&gt;StrongScript&lt;/li&gt;
&lt;li&gt;SimpleSteam&lt;/li&gt;
&lt;li&gt;improve pref&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>create hugo theme</title>
      <link>https://9renpoto.github.io/blog/2015/05/11/create-hugo-theme/</link>
      <pubDate>Mon, 11 May 2015 22:54:56 +0900</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2015/05/11/create-hugo-theme/</guid>
      <description>

&lt;h1 id=&#34;tl-dr&#34;&gt;TL;DR&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;ブログを &lt;code&gt;octpress&lt;/code&gt; から &lt;code&gt;hugo&lt;/code&gt; へ移行しました&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/9renpoto/delic&#34;&gt;hugo theme&lt;/a&gt; 書きました&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;themeを書くために&#34;&gt;themeを書くために&lt;/h2&gt;

&lt;p&gt;cmd1つでテンプレート作成&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ hugo new theme foo
.
└── themes
    └── foo
    ├── LICENSE.md
    ├── archetypes
    │   └── default.md
    ├── layouts
    │   ├── _default
    │   │   ├── list.html
    │   │   └── single.html
    │   ├── index.html
    │   └── partials
    │       ├── footer.html
    │       └── header.html
    ├── static
    │   ├── css
    │   └── js
    └── theme.toml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://gohugo.io/templates/overview/&#34;&gt;Document&lt;/a&gt; がよくまとまっていますので参考に&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;このあたりが特にお世話になりました

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://gohugo.io/templates/functions/&#34;&gt;functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gohugo.io/templates/variables/&#34;&gt;variables&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;todo&#34;&gt;TODO&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;layouts/_default&lt;/code&gt; 以外の使い方調べる&lt;/li&gt;
&lt;li&gt;rss作成&lt;/li&gt;
&lt;li&gt;bower installするbuild script&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;感想&#34;&gt;感想&lt;/h2&gt;

&lt;p&gt;octpressの時はtheme流用してたので手作りも勉強になりました&lt;/p&gt;

&lt;p&gt;t32kさんの&lt;a href=&#34;https://github.com/t32k/mol&#34;&gt;mol&lt;/a&gt;を参考（ほぼコピー&amp;amp;ペーストして）に作りました
ありがとうございます&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>EscでIMEを抜ける</title>
      <link>https://9renpoto.github.io/blog/2014/07/11/escape-ime/</link>
      <pubDate>Fri, 11 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2014/07/11/escape-ime/</guid>
      <description>

&lt;h1 id=&#34;vimなど使ってるとescapeしてimeが残ってるとイライライラ&#34;&gt;vimなど使ってるとEscapeしてIMEが残ってるとイライライラ&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://nobeans.hatenablog.com/entry/20090211/1234326782&#34;&gt;ESCで確実にIMEをオフにする&lt;/a&gt;を参考に設定を反映してみるも直ってないご様子&lt;/p&gt;

&lt;p&gt;どうもGoogleIMEには神設定があるらしい&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://i.gyazo.com/64daf9848e558c14efc0df858aef8388.png&#34; alt=&#34;image-googe-input&#34; /&gt;&lt;/p&gt;

&lt;p&gt;これで &lt;code&gt;Esc&lt;/code&gt; を使って快適に抜けられる最高&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://i.gyazo.com/2708f90efe1cebb5d4f5aad5195b1ce8.gif&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Vimでコマンドモードに戻るときIMEをオフにする &lt;code&gt;hotolab.net/blog/vim_ime&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://nobeans.hatenablog.com/entry/20090211/1234326782&#34;&gt;ESCで確実にIMEをオフにする&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>マルチカーソル</title>
      <link>https://9renpoto.github.io/blog/2014/07/10/hash-to-json/</link>
      <pubDate>Thu, 10 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2014/07/10/hash-to-json/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://i.gyazo.com/6f717eaff8e129c8669029f0a13a03e6.gif&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ハッシュの中だけを &lt;code&gt;{ foo: 1 }&lt;/code&gt; のようなjsonフォーマットに直したいとき
atomなどでマルチカーソル操作をすると全部選択されてしまってツラまる&lt;/p&gt;

&lt;p&gt;良い方法が知りたい&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>#hcj-2014</title>
      <link>https://9renpoto.github.io/blog/2014/07/08/hcj-2014/</link>
      <pubDate>Tue, 08 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2014/07/08/hcj-2014/</guid>
      <description>

&lt;h1 id=&#34;hadoop-conference-japan-2014に参加してきました&#34;&gt;Hadoop Conference Japan 2014に参加してきました&lt;/h1&gt;

&lt;p&gt;個人的な所感としては&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;spark楽しそう（だけどまだ触るには勇気が）&lt;/li&gt;
&lt;li&gt;Prestoも熱そう&lt;/li&gt;
&lt;li&gt;MapR書くよりもSQL書く方がお手軽&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以下はメモ書き&lt;/p&gt;

&lt;h2 id=&#34;keynote&#34;&gt;keynote&lt;/h2&gt;

&lt;h3 id=&#34;hadoopを取り巻く環境について&#34;&gt;hadoopを取り巻く環境について&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;始めて普及した並列分散処理

&lt;ul&gt;
&lt;li&gt;データの読み込みのスループットを最大化&lt;/li&gt;
&lt;li&gt;全件データの処理を実現&lt;/li&gt;
&lt;li&gt;シンプルなモデル（MapReduce)&lt;/li&gt;
&lt;li&gt;YARN&lt;/li&gt;
&lt;li&gt;MapReduceからそれ以外のアルゴリズムも&lt;/li&gt;
&lt;li&gt;複数の並列分散エンジンを併用できる環境&lt;/li&gt;
&lt;li&gt;メモリーの大容量化、10Gbpsネットワークの普及

&lt;ul&gt;
&lt;li&gt;インメモリー処理の実現性の向上&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;the-future-of-data&#34;&gt;The Future of Data&lt;/h3&gt;

&lt;p&gt;Doug Cutting&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;未来について

&lt;ul&gt;
&lt;li&gt;ハードウェアの価格の低下、性能の向上&lt;/li&gt;
&lt;li&gt;データの重要性の向上&lt;/li&gt;
&lt;li&gt;オープンソースが勝ち残る&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;the-future-of-spark&#34;&gt;The Future of spark&lt;/h3&gt;

&lt;p&gt;Patric Wendlell&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sparkの目的

&lt;ul&gt;
&lt;li&gt;データサイエンティスト、エンジニア能力の拡張&lt;/li&gt;
&lt;li&gt;表現力のあるクリーンなAPIの提供&lt;/li&gt;
&lt;li&gt;多様な環境にわたって統合されたランタイム&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;API　stability

&lt;ul&gt;
&lt;li&gt;3か月サイクルでマイナーリリース&lt;/li&gt;
&lt;li&gt;必要におおじてメンテナンスリリース&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Spark SQL&lt;/li&gt;
&lt;li&gt;MLlib

&lt;ul&gt;
&lt;li&gt;Spark + R&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;DataBricks&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hadoopエコシステムの片鱗と見えてきた使いドコロ&#34;&gt;Hadoopエコシステムの片鱗と見えてきた使いドコロ&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;TreasureData

&lt;ul&gt;
&lt;li&gt;なぜHadoop使うのか&lt;/li&gt;
&lt;li&gt;Hadoopを使うのは最適な解か

&lt;ul&gt;
&lt;li&gt;安いストレージとして使うだけならHadoopより良い物は沢山ある&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;データの収集ソフトウェア

&lt;ul&gt;
&lt;li&gt;多種多様なデータ・ソース&lt;/li&gt;
&lt;li&gt;fluentd,flumea,kafka,sqoop&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ファイルフォーマット

&lt;ul&gt;
&lt;li&gt;Schema on Read&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;管理・人的コスト低減の支援&lt;/li&gt;
&lt;li&gt;簡単にデータを扱うか

&lt;ul&gt;
&lt;li&gt;Tez, Spark&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;SQL on Hadoop

&lt;ul&gt;
&lt;li&gt;Impala, SlarkSQL, Presto Drill&lt;/li&gt;
&lt;li&gt;Mahout, Spark MLlib&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;今までの時代

&lt;ul&gt;
&lt;li&gt;データを入れるだけ入れたけど、レポート化できる人の限られている&lt;/li&gt;
&lt;li&gt;今までは何でも入れられるだけ&lt;/li&gt;
&lt;li&gt;これからはだれでも取り出せるようにしないと意味がない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Hadoop -&amp;gt; MPP

&lt;ul&gt;
&lt;li&gt;Twitter: Hadoop -&amp;gt; Vertica&lt;/li&gt;
&lt;li&gt;Pinterest: Hadoop -&amp;gt; redshift&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;非構造化データの領域に踏み込む&lt;/li&gt;
&lt;li&gt;混沌の時代&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;セッション&#34;&gt;セッション&lt;/h2&gt;

&lt;h3 id=&#34;マルチテナント化に向けたhadoopの最新セキュリティー事情&#34;&gt;マルチテナント化に向けたHadoopの最新セキュリティー事情&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Hadoopのユースケースの移り変わり

&lt;ul&gt;
&lt;li&gt;バッチ処理を効率よく行うため&lt;/li&gt;
&lt;li&gt;部門単位での利用、クラスターの乱立&lt;/li&gt;
&lt;li&gt;近年&lt;/li&gt;
&lt;li&gt;バッチ処理 + インタラクティブな処理&lt;/li&gt;
&lt;li&gt;SQLによるアクセス&lt;/li&gt;
&lt;li&gt;データは一部の人だけのものではない&lt;/li&gt;
&lt;li&gt;クラスターの共有（マルチテナント）&lt;/li&gt;
&lt;li&gt;マルチテナントのメリット&lt;/li&gt;
&lt;li&gt;データの複製不要&lt;/li&gt;
&lt;li&gt;業務の取り巻き&lt;/li&gt;
&lt;li&gt;性能・効率の改善&lt;/li&gt;
&lt;li&gt;課題
　- リソースの分離と管理&lt;/li&gt;
&lt;li&gt;Role管理&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;マルチテナントとセキュリティーの関連性

&lt;ul&gt;
&lt;li&gt;認証&lt;/li&gt;
&lt;li&gt;kerberos

&lt;ul&gt;
&lt;li&gt;相手が何者であるかを保証するプロトコル&lt;/li&gt;
&lt;li&gt;暗号化&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;認可&lt;/li&gt;
&lt;li&gt;HDFS ACL

&lt;ul&gt;
&lt;li&gt;ファイルシステムレベルでのaccess control&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Apache Sentry

&lt;ul&gt;
&lt;li&gt;データベース、テーブルview、行列の粒度でアクセス制御&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;認可モジュールSentryの紹介

&lt;ul&gt;
&lt;li&gt;Apache Sentryはモジュールとして開発されている&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;bigquery-and-the-world-after-mapreduce&#34;&gt;BigQuery and the world after MapReduce&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;BigData at Google

&lt;ul&gt;
&lt;li&gt;ログ分析するのにMapReduceを書いてる場合じゃない&lt;/li&gt;
&lt;li&gt;BigQuery ( sql base )&lt;/li&gt;
&lt;li&gt;indexなんてないんや&lt;/li&gt;
&lt;li&gt;全文検索、120億行、10秒ぐらい&lt;/li&gt;
&lt;li&gt;storage料金&lt;/li&gt;
&lt;li&gt;Quesy料金&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Column Oriented Storage

&lt;ul&gt;
&lt;li&gt;もはやスタンダード&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Colossus File System

&lt;ul&gt;
&lt;li&gt;GFSの次のもの&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;MPP

&lt;ul&gt;
&lt;li&gt;1TBの内容を数秒で舐めるためには何台必要なのか&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;JOIN

&lt;ul&gt;
&lt;li&gt;small join&lt;/li&gt;
&lt;li&gt;broadcast JOIN&lt;/li&gt;
&lt;li&gt;ばらまいてコピー =&amp;gt; JOIN&lt;/li&gt;
&lt;li&gt;JOIN Each&lt;/li&gt;
&lt;li&gt;shuffleしてjoinできる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;BigQuery Streaming

&lt;ul&gt;
&lt;li&gt;fluentd!&lt;/li&gt;
&lt;li&gt;fluent-plugin-bigquery&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;BigQuery User-Defined-Function-with-JavaScript

&lt;ul&gt;
&lt;li&gt;クエリ内にJavaScript書く&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Cloud Pub/Sub&lt;/li&gt;
&lt;li&gt;FlumeJava

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://pages.cs.wisc.edu/~akella/CS838/F12/838-CloudPapers/FlumeJava.pdf&#34;&gt;論文あるよ!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;MillWheel

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://static.googleusercontent.com/media/research.google.com/ja//pubs/archive/41378.pdf&#34;&gt;論文あるよ!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;sqlによるバッチ処理とストリーム処理&#34;&gt;SQLによるバッチ処理とストリーム処理&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;@tagomoris

&lt;ul&gt;
&lt;li&gt;stream処理&lt;/li&gt;
&lt;li&gt;norikra&lt;/li&gt;
&lt;li&gt;Hadoop&lt;/li&gt;
&lt;li&gt;Hive/ Presto&lt;/li&gt;
&lt;li&gt;SQL is NOT the best;&lt;/li&gt;
&lt;li&gt;But, SQL is better than NONE.&lt;/li&gt;
&lt;li&gt;Batch processing&lt;/li&gt;
&lt;li&gt;hive&lt;/li&gt;
&lt;li&gt;Stream processing&lt;/li&gt;
&lt;li&gt;storm, kafka, esper,norikra, fluentd&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Lamda Architecture

&lt;ul&gt;
&lt;li&gt;Streaming&lt;/li&gt;
&lt;li&gt;速報値&lt;/li&gt;
&lt;li&gt;Batch&lt;/li&gt;
&lt;li&gt;確定値&lt;/li&gt;
&lt;li&gt;両方に対応したい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Stream処理

&lt;ul&gt;
&lt;li&gt;レイテンシが低い&lt;/li&gt;
&lt;li&gt;同じ処理をバッチとしても実行できる必要がある&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;yarn&#34;&gt;YARN&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;TD

&lt;ul&gt;
&lt;li&gt;PlazumaDB&lt;/li&gt;
&lt;li&gt;S3上で動作&lt;/li&gt;
&lt;li&gt;HDFS is not used&lt;/li&gt;
&lt;li&gt;Hadoop Cluster&lt;/li&gt;
&lt;li&gt;Customize hadoop&lt;/li&gt;
&lt;li&gt;Customize hive&lt;/li&gt;
&lt;li&gt;Customize Pig&lt;/li&gt;
&lt;li&gt;PlazumaDB&lt;/li&gt;
&lt;li&gt;Customize Impala&lt;/li&gt;
&lt;li&gt;Customize Presto&lt;/li&gt;
&lt;li&gt;独自queue&lt;/li&gt;
&lt;li&gt;独自scheduler&lt;/li&gt;
&lt;li&gt;YARN cluster&lt;/li&gt;
&lt;li&gt;プロダクションにはまだ入れてないが
環境整えている&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;YARNとは

&lt;ul&gt;
&lt;li&gt;Job History Server注意&lt;/li&gt;
&lt;li&gt;起動してないと過去ログが追えなくなる&lt;/li&gt;
&lt;li&gt;NOTE!&lt;/li&gt;
&lt;li&gt;Use the Hadoop 2.4.0 and later !!!!

&lt;ul&gt;
&lt;li&gt;Capacity Scheduler、there is a bug!&lt;/li&gt;
&lt;li&gt;deadlock!!!!&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;hadoop-conf-pseudo doees not work&lt;/li&gt;
&lt;li&gt;2.2.0 and 2.4.0

&lt;ul&gt;
&lt;li&gt;結構違うので注意&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;presto&#34;&gt;Presto&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;what is Presto

&lt;ul&gt;
&lt;li&gt;Facebookで作られてoss化&lt;/li&gt;
&lt;li&gt;HDFS上のデータを可視化したい&lt;/li&gt;
&lt;li&gt;うまくいかない&lt;/li&gt;
&lt;li&gt;hiveが遅すぎる&lt;/li&gt;
&lt;li&gt;hiveをバッチ化 =&amp;gt; 中間DBに入れる&lt;/li&gt;
&lt;li&gt;中間DBはスケールしない&lt;/li&gt;
&lt;li&gt;HDFSに保存してないものは入れなきゃならない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Presto

&lt;ul&gt;
&lt;li&gt;中間データベースの取り除く有効な手段&lt;/li&gt;
&lt;li&gt;他のデータストアを舐めることにも対応&lt;/li&gt;
&lt;li&gt;Hiveとの使い分けが必要&lt;/li&gt;
&lt;li&gt;巨大なjoin&lt;/li&gt;
&lt;li&gt;group by&lt;/li&gt;
&lt;li&gt;Interactiveなクエリを発行できる&lt;/li&gt;
&lt;li&gt;複数のデータ・セットをまとめて表示できる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;BI tools

&lt;ul&gt;
&lt;li&gt;可視化に利用していく&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ODBC/JDBC is very complicated!&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Prestoの実行モデルについて

&lt;ul&gt;
&lt;li&gt;not MapReduce&lt;/li&gt;
&lt;li&gt;全部並行で動いてる&lt;/li&gt;
&lt;li&gt;一個死んだら全部死ぬ&lt;/li&gt;
&lt;li&gt;メモリー溢れてしまうとクエリが死んでしまう&lt;/li&gt;
&lt;li&gt;メモリーの使用量はクラスターで管理されてて、クラスターが死ぬことはない（はず）&lt;/li&gt;
&lt;li&gt;がクエリは死ぬ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>コメントを楽に入れる</title>
      <link>https://9renpoto.github.io/blog/2014/07/07/comment/</link>
      <pubDate>Mon, 07 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2014/07/07/comment/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://i.gyazo.com/4018e5f5ca75f1d8e374584233ad577a.gif&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;vimだと矩形選択で頑張れるから甘えてましたが
atomなど使っているとcommentショートカットが便利で
良く使います&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://i.gyazo.com/d7058adad30b488c066ff44fac5c376b.gif&#34; alt=&#34;image2&#34; /&gt;&lt;/p&gt;

&lt;p&gt;vimでも使えるようにしました
便利&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>括弧の入力には欠かせない</title>
      <link>https://9renpoto.github.io/blog/2014/07/06/surround/</link>
      <pubDate>Sun, 06 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2014/07/06/surround/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://i.gyazo.com/b1e2f9fd3623adf1a00afaf738c900de.gif&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;surround.vim便利
sublime-textでも使えるようですが
atomの公式パッケージにも早くほしい&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GitGutter便利すぎ</title>
      <link>https://9renpoto.github.io/blog/2014/07/05/gitgutter/</link>
      <pubDate>Sat, 05 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2014/07/05/gitgutter/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://i.gyazo.com/9dda194e4854fcbe6f09e39c99f91273.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;githubなどで開発しているとpullreqが便利で
良くコードを見るようになりました
意味のないコード差分などはできれば出したくない&lt;/p&gt;

&lt;p&gt;sublimeにもatomにもあってvimにはないのか！
と思ってたら検索して3分で見つかりました&lt;/p&gt;

&lt;p&gt;最高です&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/airblade/vim-gitgutter&#34;&gt;vim-gitgutter&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>