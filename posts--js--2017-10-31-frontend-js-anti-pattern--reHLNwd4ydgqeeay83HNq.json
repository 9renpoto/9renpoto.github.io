{"data":{"title":"Frontend JavaScript Anti-pattern","date":"2017-10-31T14:00:00.000Z","permalink":"/entry/2017/10/31/frontend-javascript-anti-pattern/","category":"js","_entry":"posts/js/2017-10-31-frontend-js-anti-pattern.md","page":"post","name":"frontend-js-anti-pattern","url":"/entry/2017/10/31/frontend-javascript-anti-pattern/"},"content":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"TL;DR"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"自分のエゴで書いてる手癖や無駄な努力をコードレビューするのは非生産的"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"積極的にlinterを採用"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"test"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"import assert from \"assert\";\n\ndescribe(\"test\", () => {\n  const { func } = require(\"./module\");\n  it(\"func\", () => {\n    assert(func(\"a\") === \"a\");\n  });\n});\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"1ファイル、single "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"describe"}]},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"親を1つ "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"describe.skip"}]},{"type":"text","value":" "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"describe.only"}]},{"type":"text","value":" できれば一旦闇を保留にできることが多い"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"1ファイルの持っている役割が大きすぎない、特に困っていない"}]},{"type":"text","value":"\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"テスト対象は "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"describe"}]},{"type":"text","value":" の中でrequireする"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"describe.only"}]},{"type":"text","value":" 実行をした際に不要なsrcを読み込まなくて良い"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"読み込まれただけで実行される関数はcoverageに含まれてしまう"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"coverage report"}]},{"type":"text","value":" が読みやすい"}]},{"type":"text","value":"\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}]},{"type":"text","value":" を使わない"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"unused変数をlintで発見しやすい"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"長い"}]},{"type":"text","value":"\n"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"src"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function mapStateToProps({ todos }: State) {\n  return {\n    tasks: { todos },\n    onUpdate: id => todos[id].done()\n  };\n}\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"arrow function"}]},{"type":"text","value":" vs "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function"}]},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"IE11を意識した場合、変換したら結局 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function"}]},{"type":"text","value":" となる"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"読みやすさと生成された後のコードを妄想しつつ相談"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"つい書きやすさと "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"return"}]},{"type":"text","value":" の省略したさで "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"arrow function"}]},{"type":"text","value":" を使うことも多い"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"読みやすければそれでいい気持ちになってきている"}]},{"type":"text","value":"\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"class"}]},{"type":"text","value":" syntaxを避ける"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"ライブラリを開発しているときには使うけれどプロダクトを書く時には意識する"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"結局 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}]},{"type":"text","value":" に状態を持たせる意味がそのclassにあるかが大事"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"ファイルサイズがデカくなる"}]},{"type":"text","value":"\n"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"var touch = \"touch\";\n$(\"#id\").on(`${touch}start ${touch}end`, e => {\n  console.log(e);\n});\n\nfunction a(element) {\n  // var element と書く３文字を省略して１文字にできる\n  element = document.getElementById(\"foo\");\n  element.addEventListener(\"click\", e => console.log(e));\n}\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"長い文字列は変数で受けて結合する"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"小さいことを売りにしているライブラリで見る"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"計算量も大事だが地道なファイルサイズ対策"}]},{"type":"text","value":"\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"無駄な引数を定義する"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"変数定義分の文字列を節約させる"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"htmlのタグなどを書く際に利用されている場合がある"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"linterで積極的に使うなと怒られる（怒られる方が平和）"}]},{"type":"text","value":"\n"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"まとめ"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"圧倒的老害感。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"http://4.bp.blogspot.com/-foiW8aYeL6s/VzZu-o6sxnI/AAAAAAAA6oQ/LHXzT0WsAX8LtB_U-msHk572kC_rY3VawCLcB/s800/mental_health_man.png","alt":"image"},"children":[]}]}],"data":{"quirksMode":false}},"raw":"\n# TL;DR\n\n- 自分のエゴで書いてる手癖や無駄な努力をコードレビューするのは非生産的\n- 積極的にlinterを採用\n\n## test\n\n```js\nimport assert from \"assert\";\n\ndescribe(\"test\", () => {\n  const { func } = require(\"./module\");\n  it(\"func\", () => {\n    assert(func(\"a\") === \"a\");\n  });\n});\n```\n\n1. 1ファイル、single `describe`\n   1. 親を1つ `describe.skip` `describe.only` できれば一旦闇を保留にできることが多い\n   1. 1ファイルの持っている役割が大きすぎない、特に困っていない\n1. テスト対象は `describe` の中でrequireする\n   1. `describe.only` 実行をした際に不要なsrcを読み込まなくて良い\n   1. 読み込まれただけで実行される関数はcoverageに含まれてしまう\n   1. `coverage report` が読みやすい\n1. `this` を使わない\n   1. unused変数をlintで発見しやすい\n   1. 長い\n\n## src\n\n```js\nfunction mapStateToProps({ todos }: State) {\n  return {\n    tasks: { todos },\n    onUpdate: id => todos[id].done()\n  };\n}\n```\n\n1. `arrow function` vs `function`\n   1. IE11を意識した場合、変換したら結局 `function` となる\n   1. 読みやすさと生成された後のコードを妄想しつつ相談\n   1. つい書きやすさと `return` の省略したさで `arrow function` を使うことも多い\n   1. 読みやすければそれでいい気持ちになってきている\n1. `class` syntaxを避ける\n   1. ライブラリを開発しているときには使うけれどプロダクトを書く時には意識する\n   1. 結局 `this` に状態を持たせる意味がそのclassにあるかが大事\n   1. ファイルサイズがデカくなる\n\n```js\nvar touch = \"touch\";\n$(\"#id\").on(`${touch}start ${touch}end`, e => {\n  console.log(e);\n});\n\nfunction a(element) {\n  // var element と書く３文字を省略して１文字にできる\n  element = document.getElementById(\"foo\");\n  element.addEventListener(\"click\", e => console.log(e));\n}\n```\n\n1. 長い文字列は変数で受けて結合する\n   1. 小さいことを売りにしているライブラリで見る\n   1. 計算量も大事だが地道なファイルサイズ対策\n1. 無駄な引数を定義する\n   1. 変数定義分の文字列を節約させる\n   1. htmlのタグなどを書く際に利用されている場合がある\n   1. linterで積極的に使うなと怒られる（怒られる方が平和）\n\n## まとめ\n\n圧倒的老害感。\n\n![image](http://4.bp.blogspot.com/-foiW8aYeL6s/VzZu-o6sxnI/AAAAAAAA6oQ/LHXzT0WsAX8LtB_U-msHk572kC_rY3VawCLcB/s800/mental_health_man.png)\n"}