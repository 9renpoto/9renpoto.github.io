webpackJsonp([0x600e6b0b6013],{275:function(e,t){e.exports={data:{site:{siteMetadata:{title:":-)",author:"github.com/9renpoto"}},markdownRemark:{id:"/home/travis/build/9renpoto/entry/src/pages/2016-08-20-typescript-coverage/index.md absPath of file >>> MarkdownRemark",html:'<h1>TypeScriptでCoverage reportを計測する</h1>\n<h2>TL;DR</h2>\n<ul>\n<li><a href="https://www.npmjs.com/package/remap-istanbul">remap-istanbul</a> を使う</li>\n</ul>\n<h2>Usage</h2>\n<ul>\n<li><code>npm install remap-istanbul</code></li>\n<li><code>sourcemap: true</code></li>\n</ul>\n<h2>Memo</h2>\n<ul>\n<li><code>tsc</code> > <code>npm test</code> という流れになったためJavaScriptとしてテストをする形になる</li>\n<li>\n<p><a href="https://www.npmjs.com/package/espower-typescript">espower-typescript</a> を使わないようになる</p>\n<ul>\n<li><code>espower-typescript</code> はtscのwrapperなのでtscする場合は使えなそう</li>\n</ul>\n</li>\n<li>\n<p><code>power-assert</code> が上手く構造を解釈してくれてなさそう</p>\n<ul>\n<li><code>espower-typescript</code> が担っていた役割を別で与える必要がある</li>\n<li>TypeScriptに依存するなら無駄にbabel pluginなどは使いたくない</li>\n<li>TODO考える</li>\n</ul>\n</li>\n</ul>\n<h2>Refs</h2>\n<ul>\n<li><a href="http://blog.syati.info/post/typescript_coverage/">http://blog.syati.info/post/typescript_coverage/</a></li>\n<li><a href="https://github.com/9renpoto/ts/pull/34">https://github.com/9renpoto/ts/pull/34</a></li>\n</ul>',frontmatter:{title:"TypeScript で coverage を計測する",date:"August 20, 2016"}}},pathContext:{path:"/entry/2016/08/20/typescript-coverage/",_PARENT:"SOURCE"}}}});
//# sourceMappingURL=path---entry-2016-08-20-typescript-coverage-c3f6ecc48460ea412dea.js.map