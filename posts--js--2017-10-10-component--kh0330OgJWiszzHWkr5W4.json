{"data":{"title":"ComponentとContainers","date":"2017-10-10T13:30:00.000Z","permalink":"/entry/2017/10/10/component/","category":"react","_entry":"posts/js/2017-10-10-component.md","page":"post","name":"component","url":"/entry/2017/10/10/component/"},"content":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"TL;DR"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Reactの場合"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"見た目に必要なものはJSXだけで "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Component"}]},{"type":"text","value":" である必要はない"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Component"}]},{"type":"text","value":" はライフサイクルを持つ"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Containers"}]},{"type":"text","value":" はデータとの関係性を持つ"}]},{"type":"text","value":"\n"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Functional Component"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Reactのドキュメントを読んでいると"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"React.Component"}]},{"type":"text","value":"をextendsして書く必要があるのかと勘違い"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"DOMの定義を書くことはJSXのsyntaxだけで完結されている"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"JSXで書かれたものとCSSを紐付けたもとを "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"見た目"}]},{"type":"text","value":" と記述した場合"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"見た目はどこのデータに紐付けられるか定かでないため、ライフサイクルを自身で定義するべきではない"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"データを渡してtreeを構築するために必要な情報を返すだけでよい"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://github.com/9renpoto/style/pull/228"},"children":[{"type":"text","value":"https://github.com/9renpoto/style/pull/228"}]}]},{"type":"text","value":"\n"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Component"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"ライフサイクルと見た目を紐付けることに集中する"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"自分が実現したいライフサイクルを実現できるか考慮して、コンポーネントの大きさを決める"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Containers"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"データを紐付けるだけ"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Reduxを使った場合、"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Component"}]},{"type":"text","value":" とは完全に疎結合に定義できる"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"ライフサイクルを意識した必要なデータは "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Component"}]},{"type":"text","value":" の中にあるため、素直にデータを紐付ける"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"初期状態の記述には気をつける"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"まとめ"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"世界はよく考えられている"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://media.giphy.com/media/RJXHcsfHNtpkY/giphy.gif","alt":"img"},"children":[]}]}],"data":{"quirksMode":false}},"raw":"\n# TL;DR\n\n- Reactの場合\n  - 見た目に必要なものはJSXだけで `Component` である必要はない\n  - `Component` はライフサイクルを持つ\n  - `Containers` はデータとの関係性を持つ\n\n## Functional Component\n\n- Reactのドキュメントを読んでいると`React.Component`をextendsして書く必要があるのかと勘違い\n- DOMの定義を書くことはJSXのsyntaxだけで完結されている\n- JSXで書かれたものとCSSを紐付けたもとを **見た目** と記述した場合\n  - 見た目はどこのデータに紐付けられるか定かでないため、ライフサイクルを自身で定義するべきではない\n  - データを渡してtreeを構築するために必要な情報を返すだけでよい\n  - <https://github.com/9renpoto/style/pull/228>\n\n## Component\n\n- ライフサイクルと見た目を紐付けることに集中する\n- 自分が実現したいライフサイクルを実現できるか考慮して、コンポーネントの大きさを決める\n\n## Containers\n\n- データを紐付けるだけ\n- Reduxを使った場合、`Component` とは完全に疎結合に定義できる\n- ライフサイクルを意識した必要なデータは `Component` の中にあるため、素直にデータを紐付ける\n- 初期状態の記述には気をつける\n\n## まとめ\n\n- 世界はよく考えられている\n\n![img](https://media.giphy.com/media/RJXHcsfHNtpkY/giphy.gif)\n"}