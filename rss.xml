<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[:-)]]></title><description><![CDATA[lazy buld suspicious note]]></description><link>https://9renpoto.github.io</link><generator>RSS for Node</generator><lastBuildDate>Sat, 14 Oct 2017 01:01:38 GMT</lastBuildDate><item><title><![CDATA[ComponentとContainers]]></title><description><![CDATA[TL;DR Reactの場合 見た目に必要なものはJSXだけで   である必要はない  はライフサイクルを持つ  はデータとの関係性を持つ Functional Component Reactのドキュメントを読んでいると をextendsして書く必要があるのかと勘違い DOM…]]></description><link>https://9renpoto.github.io/entry/2017/10/10/component/</link><guid isPermaLink="false">https://9renpoto.github.io/entry/2017/10/10/component/</guid><pubDate>Tue, 10 Oct 2017 13:30:00 GMT</pubDate><content:encoded>&lt;h1&gt;TL;DR&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Reactの場合&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;見た目に必要なものはJSXだけで &lt;code&gt;Component&lt;/code&gt; である必要はない&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Component&lt;/code&gt; はライフサイクルを持つ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Containers&lt;/code&gt; はデータとの関係性を持つ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Functional Component&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Reactのドキュメントを読んでいると&lt;code&gt;React.Component&lt;/code&gt;をextendsして書く必要があるのかと勘違い&lt;/li&gt;
&lt;li&gt;DOMの定義を書くことはJSXのsyntaxだけで完結されている&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JSXで書かれたものとCSSを紐付けたもとを &lt;strong&gt;見た目&lt;/strong&gt; と記述した場合&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;見た目はどこのデータに紐付けられるか定かでないため、ライフサイクルを自身で定義するべきではない&lt;/li&gt;
&lt;li&gt;データを渡してtreeを構築するために必要な情報を返すだけでよい&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/9renpoto/style/pull/228&quot;&gt;https://github.com/9renpoto/style/pull/228&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Component&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ライフサイクルと見た目を紐付けることに集中する&lt;/li&gt;
&lt;li&gt;自分が実現したいライフサイクルを実現できるか考慮して、コンポーネントの大きさを決める&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Containers&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;データを紐付けるだけ&lt;/li&gt;
&lt;li&gt;Reduxを使った場合、&lt;code&gt;Component&lt;/code&gt; とは完全に疎結合に定義できる&lt;/li&gt;
&lt;li&gt;ライフサイクルを意識した必要なデータは &lt;code&gt;Component&lt;/code&gt; の中にあるため、素直にデータを紐付ける&lt;/li&gt;
&lt;li&gt;初期状態の記述には気をつける&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;まとめ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;世界はよく考えられている&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/RJXHcsfHNtpkY/giphy.gif&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;</content:encoded></item></channel></rss>