webpackJsonp([0x698ed73228625000],{"./node_modules/json-loader/index.js!./.cache/json/entry-2016-01-13-gh-pages.json":function(e,a){e.exports={data:{site:{siteMetadata:{title:":-)",author:"github.com/9renpoto"}},markdownRemark:{id:"/home/travis/build/9renpoto/entry/src/pages/2016-01-13-gh-pages/index.md absPath of file >>> MarkdownRemark",html:'<h1>TL;DR</h1>\n<ul>\n<li>Hugoを利用して <code>&#x3C;username>.github.io</code> に公開</li>\n<li><a href="https://github.com/mozilla/oghliner">mozilla/oghliner</a>を利用してオフライン対応</li>\n</ul>\n<h2>Hugoを利用してgh-pagesにデプロイ</h2>\n<p>公式ドキュメントでwercker-ciを利用したデプロイ方法が<a href="https://gohugo.io/tutorials/automated-deployments/">紹介</a>されており、そちらを利用していましたが。</p>\n<div class="gatsby-highlight">\n      <pre class="language-sh"><code>http://9renpoto.github.io/<project_name></code></pre>\n      </div>\n<p>という名前になってしまい、個人ページとして構築を目的とした場合不満があったため環境を見直し。</p>\n<ul>\n<li><a href="https://pages.github.com/">pages.github.com/</a></li>\n<li><a href="http://qiita.com/eichann/items/4fe61b8b9bbafcfbe847#%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%922%E3%81%A4%E4%BD%9C%E6%88%90">qiita.com/eichann/items/4fe61b8b9bbafcfbe847</a></li>\n</ul>\n<p>を参考に問題を解決するために手を動かし始めました。</p>\n<div class="gatsby-highlight">\n      <pre class="language-sh"><code><username>.github.io</code></pre>\n      </div>\n<p>リポジトリーを作成し <code>master</code> ブランチにpushされることによって公開される（not gh-pages branch)ようなので。</p>\n<p><code>public/</code> に生成されたものを <code>&#x3C;username>.github.io</code> にdestするように修正しました。</p>\n<h2>オフライン対応</h2>\n<p><a href="https://github.com/mozilla/oghliner">mozilla/oghliner</a>がserviceWorkerを利用したオフライン化を簡単に提供していたので試しに使ってみる。</p>\n<h2>Feature</h2>\n<p>ビルド・デプロイタスクを直す。</p>',frontmatter:{title:"Update Blog",date:"January 13, 2016"}}},pathContext:{path:"/entry/2016/01/13/gh-pages/"}}}});
//# sourceMappingURL=path---entry-2016-01-13-gh-pages-bb6974f9e94abff3de0f.js.map