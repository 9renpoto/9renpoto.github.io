<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Erlang on :-)</title>
    <link>https://9renpoto.github.io/categories/erlang.html</link>
    <description>Recent content in Erlang on :-)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Wed, 10 Jul 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://9renpoto.github.io/categories/erlang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>riak meetup tokyo 2 に参加してきました</title>
      <link>https://9renpoto.github.io/blog/2013/07/10/riak-meetup-tokyo-2.html</link>
      <pubDate>Wed, 10 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2013/07/10/riak-meetup-tokyo-2.html</guid>
      <description>riak meetup tokyo 2 memo RTB and FreakOut RTB概略。
 ディスプレー広告の新しい見せ方  1回の広告表示ごとに買い付け オークション形式によりアラカルトメニュー   広告主のネット広告におけるROI最適を目指す。
RTBの技術的課題。
広告表示の時間は0.1秒  レイテンシの軽減 多数のRTBを処理 50mc or die  [Tokoy|Kyoto] [Tyrant|Tycoon]  高速 スケールは簡単にできない 運用実績はあるが用件を満たすのが難しい  Riak and FreakOut  スループットを向上させるために  hashからpartitionを特定する 素のままでは50mc or die的に厳しいため 構成の工夫が必要 スケーラビリティの問題を克服できるメリットは大きい 「サーバーを足すだけで運用」   Yokozuna日本語検索を評価しました @rev4t @yosisa
日本語検索： Yokozuna。
Solr XMLスキーマを利用した検索が可能 便利そう。</description>
    </item>
    
    <item>
      <title>riak meetup tokyoに参加してきました</title>
      <link>https://9renpoto.github.io/blog/2013/03/12/riak-meetup-tokyo.html</link>
      <pubDate>Tue, 12 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2013/03/12/riak-meetup-tokyo.html</guid>
      <description>Riak intro &amp;amp; RICON報告 @kuenishi
分散システムの研究や開発は5年ぐらい 日本法人が9月に出来た。
Riakの紹介  Dynamoにインスパイアされた Consistent Hassingによる水平分割する Vector Clocksを用いてレプリケーション Erlang/OTPで動作 分散KVS
 HTTP / Protocol Buffers
 Secondary Index/ MapReduce
 Link Walking
 Consistent Hassing and Replicas / Vecteor Clocks
  分散システム、ざっくり。
 Graph SQL Document Scale out  RICONについて  分散システム、分散DBのカンファレンス  事例  Redis側でロックして、裏側はRiakで構築  壊れても大丈夫なようにするのが鉄板のパターン   面白かった話  Rak Pipe Introduction Yokozuna Building Riak CS on Riak Cloning the Cloud Bringing Consistency on Riak  Riak with Engine yard  EC2上のGentoo すべてはChefで構築 その上にアプリをデプロイ 再起動も1から構築 ssh / sudo可能 何台、何度でも再現可能</description>
    </item>
    
  </channel>
</rss>