<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Typescript on :-)</title>
    <link>https://9renpoto.github.io/categories/typescript/</link>
    <description>Recent content in Typescript on :-)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Sun, 25 Jun 2017 13:40:18 +0900</lastBuildDate>
    
	<atom:link href="https://9renpoto.github.io/categories/typescript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>TypeScript で coverage を計測する方法を変える</title>
      <link>https://9renpoto.github.io/blog/2017/06/25/nyc-typescript-coverage/</link>
      <pubDate>Sun, 25 Jun 2017 13:40:18 +0900</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2017/06/25/nyc-typescript-coverage/</guid>
      <description> TL;DR  nycが公式でサポート 事前のtscしてremap-istanbulしなくても良くなりました（後述）  Usage  公式ドキュメントをそのまま記述 https://github.com/9renpoto/ts/pull/93  メリット  前回：http://9renpoto.github.io/blog/2016/08/20/typescript-coverage/ tscする一手間を省略してts-nodeに任せるだけでよくなりました  
Refs  公式ドキュメント  </description>
    </item>
    
    <item>
      <title>storybook を TypeScript で動かす</title>
      <link>https://9renpoto.github.io/blog/2016/09/13/storybook/</link>
      <pubDate>Tue, 13 Sep 2016 21:38:08 +0900</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2016/09/13/storybook/</guid>
      <description>React Storybookを試す TL;DR  react-storybookはcomponentのstyleguide TypeScriptのままでは動かせないので一度ビルドする（2016/09現在） addon拡張で開発が便利になるエコシステムはある 途中経過  9renpoto/style   storybook  stories  add して一覧ページがカジュアルに作成できる gh-pages などで簡単にホストできる HMR ができるのはありがたい いろいろwatchしたくなる  webpack にどっぷり依存  TypeScript with React  2016年9月現在だとReactアプリのTypeScript採用は時期尚早  確かに現状の型定義は古い まだそこで困るほどReact使いこなせていない 緩く型を信じる・困ったら考える（個人では）  tsx  サポートありがたい DOMを型付きで定義できることの安心感 テストを書くのは意識高めになる必要がある 便利だけど遅い  webpack  古いloaderが増えてきたex. ts-loader ts-loader などでwatchはできないので tsc -w で様子を見る ガッツリ依存せず疎結合にできるところは疎結合にする   CSS-module  基本的に使わない方が良さそう 使う場合は構造化cssとして育てるのではなく、 local cssとしてビルドしたほうが良さそう  SDKなどで利用するのはアリ   Refs react-storybookを用いたReactコンポーネント開発</description>
    </item>
    
    <item>
      <title>TypeScript のテスト環境を考える</title>
      <link>https://9renpoto.github.io/blog/2016/08/31/karma-webpack/</link>
      <pubDate>Wed, 31 Aug 2016 21:26:35 +0900</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2016/08/31/karma-webpack/</guid>
      <description>上手く動かない https://travis-ci.org/9renpoto/ts/builds/156475663
 アバウトな構成  &amp;quot;devDependencies&amp;quot;: { &amp;quot;@9renpoto/eslint-config&amp;quot;: &amp;quot;^1.1.0&amp;quot;, &amp;quot;@9renpoto/tslint-config&amp;quot;: &amp;quot;^1.0.0&amp;quot;, &amp;quot;@types/mocha&amp;quot;: &amp;quot;^2.2.31&amp;quot;, &amp;quot;@types/power-assert&amp;quot;: &amp;quot;0.0.27&amp;quot;, &amp;quot;awesome-typescript-loader&amp;quot;: &amp;quot;^2.2.1&amp;quot;, &amp;quot;codecov&amp;quot;: &amp;quot;^1.0.1&amp;quot;, &amp;quot;eslint&amp;quot;: &amp;quot;^3.4.0&amp;quot;, &amp;quot;json-loader&amp;quot;: &amp;quot;^0.5.4&amp;quot;, &amp;quot;karma&amp;quot;: &amp;quot;^1.2.0&amp;quot;, &amp;quot;karma-coverage&amp;quot;: &amp;quot;^1.1.1&amp;quot;, &amp;quot;karma-firefox-launcher&amp;quot;: &amp;quot;^1.0.0&amp;quot;, &amp;quot;karma-mocha&amp;quot;: &amp;quot;^1.1.1&amp;quot;, &amp;quot;karma-sourcemap-loader&amp;quot;: &amp;quot;^0.3.7&amp;quot;, &amp;quot;karma-webpack&amp;quot;: &amp;quot;^1.8.0&amp;quot;, &amp;quot;mocha&amp;quot;: &amp;quot;^3.0.2&amp;quot;, &amp;quot;npm-run-all&amp;quot;: &amp;quot;^3.0.0&amp;quot;, &amp;quot;power-assert&amp;quot;: &amp;quot;^1.4.1&amp;quot;, &amp;quot;rimraf&amp;quot;: &amp;quot;^2.5.4&amp;quot;, &amp;quot;tslint&amp;quot;: &amp;quot;^3.15.1&amp;quot;, &amp;quot;typescript&amp;quot;: &amp;quot;^2.0.2&amp;quot;, &amp;quot;webpack&amp;quot;: &amp;quot;^1.13.2&amp;quot;, &amp;quot;webpack-espower-loader&amp;quot;: &amp;quot;^1.0.1&amp;quot; }  tsc ・ webpack しても問題ないように見えるが、 karma を通した場合 SyntaxError など出てきて非常に厳しい。
https://github.com/9renpoto/karma-power-assert-typescript-mocha-webpack-sample
同様の構成で先に検証頂いているものを発見するも、現在構成との違いの無さに こちらが動かない理由は不明、頭を悩ませる。</description>
    </item>
    
    <item>
      <title>TypeScript で coverage を計測する</title>
      <link>https://9renpoto.github.io/blog/2016/08/20/typescript-coverage/</link>
      <pubDate>Sat, 20 Aug 2016 14:28:25 +0900</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2016/08/20/typescript-coverage/</guid>
      <description> TypeScriptでCoverage reportを計測する TL;DR  remap-istanbul を使う  Usage  npm install remap-istanbul sourcemap: true  Memo  tsc &amp;gt; npm test という流れになったためJavaScriptとしてテストをする形になる espower-typescript を使わないようになる  espower-typescript はtscのwrapperなのでtscする場合は使えなそう  power-assert が上手く構造を解釈してくれてなさそう  espower-typescript が担っていた役割を別で与える必要がある TypeScriptに依存するなら無駄にbabel pluginなどは使いたくない TODO考える   Refs  http://blog.syati.info/post/typescript_coverage/ https://github.com/9renpoto/ts/pull/34  </description>
    </item>
    
    <item>
      <title>TypeScript with power-assert</title>
      <link>https://9renpoto.github.io/blog/2016/08/11/module-test-2/</link>
      <pubDate>Thu, 11 Aug 2016 21:43:32 +0900</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2016/08/11/module-test-2/</guid>
      <description> TypeScriptでpower-assertを使いたい TypeScriptテストについて 少し調べました。
 https://github.com/9renpoto/ts/pull/31  原因  TypeScriptがファイルパスを相対パスか絶対パスのどちらかで返す場合がある  https://github.com/Microsoft/TypeScript/blob/204f2c16c0d6ff851e4798c03a9646b625ac2bd7/src/compiler/core.ts#L821-L825   対策  https://github.com/teppeis/typescript-simple/pull/47  悩み  rootDir, outDir の組み合わせで挙動が変わることを理解する必要がある rootDirs が入る（TypeScript 2.0~)  </description>
    </item>
    
    <item>
      <title>typescript test</title>
      <link>https://9renpoto.github.io/blog/2016/06/23/module-test/</link>
      <pubDate>Thu, 23 Jun 2016 11:25:56 +0900</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2016/06/23/module-test/</guid>
      <description>TypeScriptの勉強を頑張ろう  9renpoto/javascript/pull/19  { &amp;quot;devDependencies&amp;quot;: { &amp;quot;eslint&amp;quot;: &amp;quot;^2.13.1&amp;quot;, &amp;quot;espower-typescript&amp;quot;: &amp;quot;^5.0.1&amp;quot;, &amp;quot;mocha&amp;quot;: &amp;quot;^2.5.3&amp;quot;, &amp;quot;power-assert&amp;quot;: &amp;quot;^1.4.1&amp;quot;, &amp;quot;tslint&amp;quot;: &amp;quot;^3.11.0&amp;quot;, &amp;quot;typescript-eslint-parser&amp;quot;: &amp;quot;0.1.0-alpha-1&amp;quot;, &amp;quot;typings&amp;quot;: &amp;quot;^1.3.0&amp;quot; } }  下記を満たす簡単なサンプルを書く。
 複数module mochaによるテスト power-assertによるテスト  espower-typescript が通らないので中身を見て調べる。</description>
    </item>
    
  </channel>
</rss>