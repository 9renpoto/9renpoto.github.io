<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on :-)</title>
    <link>https://9renpoto.github.io/categories/javascript.xml</link>
    <description>Recent content in Javascript on :-)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <atom:link href="https://9renpoto.github.io/categories/javascript.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>nodefest 2016 参加メモ</title>
      <link>https://9renpoto.github.io/blog/2016/11/13/nodefest-2016/</link>
      <pubDate>Sun, 13 Nov 2016 09:51:54 +0900</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2016/11/13/nodefest-2016/</guid>
      <description>

&lt;h1 id=&#34;参加メモ&#34;&gt;参加メモ&lt;/h1&gt;

&lt;h2 id=&#34;building-interactive-npm-command-line-modules&#34;&gt;Building Interactive npm Command Line Modules&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;arguments parsing

&lt;ul&gt;
&lt;li&gt;200種以上のpackage&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;yargs

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.help()&lt;/code&gt; 便利&lt;/li&gt;
&lt;li&gt;Interactiveなオプションを宣言的に記述できる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://lrlna.github.io/nodefest-2016/#1&#34;&gt;https://lrlna.github.io/nodefest-2016/#1&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;famicom-programming-with-javascript&#34;&gt;Famicom programming with JavaScript&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;backgroundの背景を替えるためにはfor-loop4回&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;graphql-for-the-restful-crowd&#34;&gt;GraphQL for the RESTful crowd&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/barakchamo&#34;&gt;https://github.com/barakchamo&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;graph QL
&lt;code&gt;js
user(id: 1) {
id,
first_name
last_name
}
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;fragment&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;the-seif-project&#34;&gt;The Seif Project&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;webの問題はpassword, 簡単に盗まれる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Seif Project&lt;/code&gt; の中ではカギ認証&lt;/li&gt;
&lt;li&gt;seifnode&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/paypal/seifnode&#34;&gt;https://github.com/paypal/seifnode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/paypal/seif-protocol&#34;&gt;https://github.com/paypal/seif-protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.seif.place/&#34;&gt;http://www.seif.place/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;why-to-standardize-your-readmes&#34;&gt;Why to Standardize your READMEs&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/RichardLitt/standard-readme&#34;&gt;https://github.com/RichardLitt/standard-readme&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;vue-js-2-0サーバサイドレンダリング&#34;&gt;Vue.js 2.0サーバサイドレンダリング&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;レンダラ&lt;/li&gt;
&lt;li&gt;ハイドレーション&lt;/li&gt;
&lt;li&gt;コンテキスト&lt;/li&gt;
&lt;li&gt;バンドリング&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;サンプル &lt;a href=&#34;https://github.com/vuejs/vue-hackernews-2.0&#34;&gt;https://github.com/vuejs/vue-hackernews-2.0&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;react-reduxを使った大規模商用サービスの開発&#34;&gt;React + Reduxを使った大規模商用サービスの開発&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Transition

&lt;ul&gt;
&lt;li&gt;react-router

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;onEnter&lt;/code&gt;, 認証認可&lt;/li&gt;
&lt;li&gt;&lt;code&gt;replaceState&lt;/code&gt; を使う&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Code Splitting

&lt;ul&gt;
&lt;li&gt;webpack &lt;code&gt;require.ensure&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/richardscarrott/require-error-handler-webpack-plugin&#34;&gt;https://github.com/richardscarrott/require-error-handler-webpack-plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;SSR

&lt;ul&gt;
&lt;li&gt;Reactそのものは別に遅くない&lt;/li&gt;
&lt;li&gt;Solution

&lt;ol&gt;
&lt;li&gt;Partial Rendering

&lt;ul&gt;
&lt;li&gt;firstViewだけSSR&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Composite Rendering&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;postcss-build-your-own-css-processor&#34;&gt;PostCSS: Build your own CSS processor&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;reworkcssが元になっている&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;javascriptによる並列処理-共有メモリとロック&#34;&gt;JavaScriptによる並列処理：共有メモリとロック&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://speakerdeck.com/chikoski/20161113-nodefest&#34;&gt;https://speakerdeck.com/chikoski/20161113-nodefest&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;@chikoski&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// 提案中..
window.setImmidiate(() =&amp;gt; {
  doTask();
})
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// 別threadで実行したいjsを指定する
const worker = new Worker(&#39;worker.js&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;arrayBuffer&lt;/code&gt; はポインタ渡し可能になった =&amp;gt; &lt;code&gt;SharedArrayButter&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// 割り込まれない処理の記述
Atomics
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;Atomics.wake
Atomics.wait
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>storybook を TypeScript で動かす</title>
      <link>https://9renpoto.github.io/blog/2016/09/13/storybook/</link>
      <pubDate>Tue, 13 Sep 2016 21:38:08 +0900</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2016/09/13/storybook/</guid>
      <description>

&lt;h1 id=&#34;react-storybookを試す&#34;&gt;React Storybookを試す&lt;/h1&gt;

&lt;h2 id=&#34;tl-dr&#34;&gt;TL;DR&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;react-storybookはcomponentのstyleguide&lt;/li&gt;
&lt;li&gt;TypeScriptのままでは動かせないので一度ビルドする（2016/09現在）&lt;/li&gt;
&lt;li&gt;addon拡張で開発が便利になるエコシステムはある&lt;/li&gt;
&lt;li&gt;途中経過

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/9renpoto/style/tree/aab6f82ccb228a6b56a18223f6f66bf0f3bd78b1&#34;&gt;9renpoto/style&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;storybook&#34;&gt;storybook&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;stories&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;add&lt;/code&gt; して一覧ページがカジュアルに作成できる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gh-pages&lt;/code&gt; などで簡単にホストできる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HMR&lt;/code&gt; ができるのはありがたい&lt;/li&gt;
&lt;li&gt;いろいろwatchしたくなる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;webpack&lt;/code&gt; にどっぷり依存&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;typescript-with-react&#34;&gt;TypeScript with React&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://gfx.hatenablog.com/entry/2016/09/12/162055&#34;&gt;2016年9月現在だとReactアプリのTypeScript採用は時期尚早&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;確かに現状の型定義は古い&lt;/li&gt;
&lt;li&gt;まだそこで困るほどReact使いこなせていない&lt;/li&gt;
&lt;li&gt;緩く型を信じる・困ったら考える（個人では）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tsx&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;サポートありがたい&lt;/li&gt;
&lt;li&gt;DOMを型付きで定義できることの安心感&lt;/li&gt;
&lt;li&gt;テストを書くのは意識高めになる必要がある&lt;/li&gt;
&lt;li&gt;便利だけど遅い&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;webpack&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;古いloaderが増えてきたex. &lt;code&gt;ts-loader&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ts-loader&lt;/code&gt; などでwatchはできないので &lt;code&gt;tsc -w&lt;/code&gt; で様子を見る&lt;/li&gt;
&lt;li&gt;ガッツリ依存せず疎結合にできるところは疎結合にする&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;css-module&#34;&gt;CSS-module&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;基本的に使わない方が良さそう&lt;/li&gt;
&lt;li&gt;使う場合は構造化cssとして育てるのではなく、 &lt;code&gt;local&lt;/code&gt; cssとしてビルドしたほうが良さそう

&lt;ul&gt;
&lt;li&gt;SDKなどで利用するのはアリ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;refs&#34;&gt;Refs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.hatenastaff.com/entry/2016/04/14/150000&#34;&gt;react-storybookを用いたReactコンポーネント開発&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>TypeScript で coverage を計測する</title>
      <link>https://9renpoto.github.io/blog/2016/08/20/coverage/</link>
      <pubDate>Sat, 20 Aug 2016 14:28:25 +0900</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2016/08/20/coverage/</guid>
      <description>

&lt;h1 id=&#34;typescriptでcoverage-reportを計測する&#34;&gt;TypeScriptでCoverage reportを計測する&lt;/h1&gt;

&lt;h2 id=&#34;tl-dr&#34;&gt;TL;DR&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/remap-istanbul&#34;&gt;remap-istanbul&lt;/a&gt; を使う&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;npm install remap-istanbul&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sourcemap: true&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;memo&#34;&gt;Memo&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tsc&lt;/code&gt; &amp;gt; &lt;code&gt;npm test&lt;/code&gt; という流れになったためJavaScriptとしてテストをする形になる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/espower-typescript&#34;&gt;espower-typescript&lt;/a&gt; を使わないようになる

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;espower-typescript&lt;/code&gt; はtscのwrapperなのでtscする場合は使えなそう&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;power-assert&lt;/code&gt; が上手く構造を解釈してくれてなさそう

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;espower-typescript&lt;/code&gt; が担っていた役割を別で与える必要がある&lt;/li&gt;
&lt;li&gt;TypeScriptに依存するなら無駄にbabel pluginなどは使いたくない&lt;/li&gt;
&lt;li&gt;TODO考える&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;refs&#34;&gt;Refs&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.syati.info/post/typescript_coverage/&#34;&gt;http://blog.syati.info/post/typescript_coverage/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/9renpoto/ts/pull/34&#34;&gt;https://github.com/9renpoto/ts/pull/34&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>TypeScript with power-assert</title>
      <link>https://9renpoto.github.io/blog/2016/08/11/module-test-2/</link>
      <pubDate>Thu, 11 Aug 2016 21:43:32 +0900</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2016/08/11/module-test-2/</guid>
      <description>

&lt;h1 id=&#34;typescriptでpower-assertを使いたい&#34;&gt;TypeScriptでpower-assertを使いたい&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://9renpoto.github.io/blog/2016/06/23/typescript-module-test/&#34;&gt;TypeScriptテストについて&lt;/a&gt; 少し調べました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/9renpoto/ts/pull/31&#34;&gt;https://github.com/9renpoto/ts/pull/31&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;原因&#34;&gt;原因&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;TypeScriptがファイルパスを相対パスか絶対パスのどちらかで返す場合がある

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/TypeScript/blob/204f2c16c0d6ff851e4798c03a9646b625ac2bd7/src/compiler/core.ts#L821-L825&#34;&gt;https://github.com/Microsoft/TypeScript/blob/204f2c16c0d6ff851e4798c03a9646b625ac2bd7/src/compiler/core.ts#L821-L825&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;対策&#34;&gt;対策&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/teppeis/typescript-simple/pull/47&#34;&gt;https://github.com/teppeis/typescript-simple/pull/47&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;悩み&#34;&gt;悩み&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rootDir&lt;/code&gt;, &lt;code&gt;outDir&lt;/code&gt; の組み合わせで挙動が変わることを理解する必要がある&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rootDirs&lt;/code&gt; が入る（TypeScript 2.0~)&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>typescript test</title>
      <link>https://9renpoto.github.io/blog/2016/06/23/module-test/</link>
      <pubDate>Thu, 23 Jun 2016 11:25:56 +0900</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2016/06/23/module-test/</guid>
      <description>

&lt;h1 id=&#34;typescriptの勉強を頑張ろう&#34;&gt;TypeScriptの勉強を頑張ろう&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/9renpoto/javascript/pull/19&#34;&gt;9renpoto/javascript/pull/19&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/9renpoto/javascript/tree/fbb4448064f42461936bb02b792e9a6ec4f8c189&#34;&gt;commit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;devDependencies&amp;quot;: {
    &amp;quot;eslint&amp;quot;: &amp;quot;^2.13.1&amp;quot;,
    &amp;quot;espower-typescript&amp;quot;: &amp;quot;^5.0.1&amp;quot;,
    &amp;quot;mocha&amp;quot;: &amp;quot;^2.5.3&amp;quot;,
    &amp;quot;power-assert&amp;quot;: &amp;quot;^1.4.1&amp;quot;,
    &amp;quot;tslint&amp;quot;: &amp;quot;^3.11.0&amp;quot;,
    &amp;quot;typescript-eslint-parser&amp;quot;: &amp;quot;0.1.0-alpha-1&amp;quot;,
    &amp;quot;typings&amp;quot;: &amp;quot;^1.3.0&amp;quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下記を満たす簡単なサンプルを書く。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;複数module&lt;/li&gt;
&lt;li&gt;mochaによるテスト&lt;/li&gt;
&lt;li&gt;power-assertによるテスト&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;espower-typescript&lt;/code&gt; が通らないので中身を見て調べる。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>