<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>:-)</title>
    <link>https://9renpoto.github.io/categories/book/index.xml</link>
    <description>Recent content on :-)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <atom:link href="https://9renpoto.github.io/categories/book/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>読書 Team Geek</title>
      <link>https://9renpoto.github.io/blog/2013/12/25/team-geak/</link>
      <pubDate>Wed, 25 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2013/12/25/team-geak/</guid>
      <description>&lt;p&gt;人間関係に悩んでおり、以下の本を読んでおりました&lt;/p&gt;

&lt;p&gt;読み終えたので簡単な感想をメモ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;大切

&lt;ul&gt;
&lt;li&gt;謙虚&lt;/li&gt;
&lt;li&gt;信頼&lt;/li&gt;
&lt;li&gt;尊敬&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;オープンに

&lt;ul&gt;
&lt;li&gt;上の人は質問に堂々と答える&lt;/li&gt;
&lt;li&gt;下の人な恐れず質問する&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;責任

&lt;ul&gt;
&lt;li&gt;重要&lt;/li&gt;
&lt;li&gt;自分事化&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;まず今までの失敗を繰り返さぬよう沢山実践して、違う失敗しよう&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;マーケティングの人のことを考えるとゾッとするのはなぜだろうか？
それはエンジニアリング文化と相入れないからだ．
ぼくたちの文化は「事実」に満ちあふれている．
コードはコンパイル「できる」と「できない」しかない．
ソフトウェアは機能を「持つ」と「持たない」しかない．
問題は解決「できる」と「できない」しかない．
説明を「引き伸ばす」ことはしない．事実だけを話す．&lt;/p&gt;

&lt;p&gt;Brian W.Fitzpatrick, Ben Collins-Sussman（2013)
『Team Geek Googleのギークたちはいかにしてチームを作るのか』株式会社オライリー・ジャパン 150pp.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;学びとは少しそれた話ですが、上記の言葉が何よりも共感できました&lt;/p&gt;

&lt;p&gt;自分はエンジニアで居心地が良い&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>読書 アジャイルサムライ</title>
      <link>https://9renpoto.github.io/blog/2013/12/25/agile-samurai/</link>
      <pubDate>Wed, 25 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2013/12/25/agile-samurai/</guid>
      <description>&lt;p&gt;アジャイル開発について悩んでおりましたので、噂のアジャイルサムライを読みました&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;学べたこと

&lt;ul&gt;
&lt;li&gt;考え方&lt;/li&gt;
&lt;li&gt;立場の明確化

&lt;ul&gt;
&lt;li&gt;プロダクトオーナー&lt;/li&gt;
&lt;li&gt;スクラムマスター&lt;/li&gt;
&lt;li&gt;開発者&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;立場に対して自分の役割が明確にある

&lt;ul&gt;
&lt;li&gt;わかりやすい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;大切なのは&lt;strong&gt;モノ&lt;/strong&gt;を作ること

&lt;ul&gt;
&lt;li&gt;未完成に価値はない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;時間・リソース・金は有限

&lt;ul&gt;
&lt;li&gt;現実は非常に大切&lt;/li&gt;
&lt;li&gt;優先順位の大切さ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;流れ

&lt;ul&gt;
&lt;li&gt;プロダクトオーナー&lt;/li&gt;
&lt;li&gt;作りたいものの決定&lt;/li&gt;
&lt;li&gt;優先順位の決定&lt;/li&gt;
&lt;li&gt;スクラムマスター&lt;/li&gt;
&lt;li&gt;時間管理&lt;/li&gt;
&lt;li&gt;開発者&lt;/li&gt;
&lt;li&gt;見積もる&lt;/li&gt;
&lt;li&gt;作る&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ウォーターフォールとの違い&lt;/li&gt;
&lt;li&gt;見積もりが開発者に任せられてるところが良い&lt;/li&gt;
&lt;li&gt;ストーリーポイントを基準に実現可能性を図る

&lt;ul&gt;
&lt;li&gt;現実を見ている&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;見積もれるタスク

&lt;ul&gt;
&lt;li&gt;細かなサイクルを回すというよりも、見積もれる範囲を大切にするという考えに共感&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;未完成に価値はない&lt;/strong&gt; 完成品を作る（レビューする）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;なるほどわかりやすい&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>リーダブルコード読みました</title>
      <link>https://9renpoto.github.io/blog/2013/02/03/readable-code/</link>
      <pubDate>Sun, 03 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>https://9renpoto.github.io/blog/2013/02/03/readable-code/</guid>
      <description>

&lt;h1 id=&#34;リーダーブルコードよんだメモ&#34;&gt;リーダーブルコードよんだメモ&lt;/h1&gt;

&lt;p&gt;ちょっと前の話ですが、リーダーブルコードを読みましたのでその感想をメモ&lt;/p&gt;

&lt;h2 id=&#34;印象に残った学び&#34;&gt;印象に残った学び&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;名前の大切さ

&lt;ul&gt;
&lt;li&gt;プログラムで一番難しいところ&lt;/li&gt;
&lt;li&gt;良い名前ほど理解しやすい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;コメントの大切さ

&lt;ul&gt;
&lt;li&gt;コメントを書く目的&lt;/li&gt;
&lt;li&gt;意味のあるコメントを書かないと意味がない&lt;/li&gt;
&lt;li&gt;コメントはコードの理解を助けるもの&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;コードの分割

&lt;ul&gt;
&lt;li&gt;小さければ小さいほど正義と読む前まで考えていた&lt;/li&gt;
&lt;li&gt;どう分割すべきか&lt;/li&gt;
&lt;li&gt;重複コードとは何なのか&lt;/li&gt;
&lt;li&gt;理解しやすいように分割する&lt;/li&gt;
&lt;li&gt;意味が明確に分かれるよう分割する&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;短いコードを書く

&lt;ul&gt;
&lt;li&gt;これは非常に難しいが理屈はよくわかる&lt;/li&gt;
&lt;li&gt;よいメソッドよいモジュールを積極的に使っていくことが大事&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>